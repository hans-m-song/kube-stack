apiVersion: v1
kind: Namespace
metadata:
  name: pihole
---
apiVersion: v1
kind: Secret
metadata:
  name: pihole-secret
  namespace: pihole
type: Opaque
data:
  web.password: UGlob2xlQDEyMzQ1Cg==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pihole-config
  namespace: pihole
data:
  TZ: Australia/Brisbane
  PIHOLE_DNS: 8.8.8.8;8.8.4.4
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-etc-pvc
  namespace: pihole
spec:
  storageClassName: standard
  resources:
    requests:
      storage: 1Gi
  accessModes:
  - ReadWriteOnce
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-dnsmasq-pvc
  namespace: pihole
spec:
  storageClassName: standard
  resources:
    requests:
      storage: 500Mi
  accessModes:
  - ReadWriteOnce
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole-deployment
  namespace: pihole
  labels:
    app: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      restartPolicy: Always
      containers:
      - name: pihole
        image: pihole/pihole
        lifecycle:
          postStart:
            exec:
              command:
              - sh
              - -c
              - pihole -a -p $WEBPASSWORD
        env:
        - name: WEBPASSWORD
          valueFrom:
            secretKeyRef:
              name: pihole-secret
              key: web.password
        envFrom:
        - configMapRef:
            name: pihole-config
        ports:
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 53
          name: dns-udp
          protocol: UDP
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        volumeMounts:
        - name: pihole-etc
          mountPath: /etc/pihole
        - name: pihole-dnsmasq
          mountPath: /etc/dnsmasq.d
      volumes:
      - name: pihole-etc
        persistentVolumeClaim:
          claimName: pihole-etc-pvc
      - name: pihole-dnsmasq
        persistentVolumeClaim:
          claimName: pihole-dnsmasq-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-svc-web
  namespace: pihole
  labels:
    app: pihole
spec:
  selector:
    app: pihole
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: https
    port: 443
    targetPort: https
    protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-svc-dns
  namespace: pihole
  labels:
    app: pihole
spec:
  type: NodePort
  selector:
    app: pihole
  ports:
  - name: dns-tcp
    port: 53
    targetPort: dns-tcp
    protocol: TCP
  - name: dns-udp
    port: 53
    targetPort: dns-udp
    protocol: UDP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pihole-ingress
  namespace: pihole
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-staging
spec:
  tls:
  - hosts:
    - pihole.192.168.1.42.nip.io
    secretName: pihole-cert
  rules:
  - host: pihole.192.168.1.42.nip.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: pihole-svc-web
            port:
              name: http
